The Model Layer
+++++++++++++++

Introduction to models
----------------------

Field types
-----------

* ``CharField`` : A string field for small strings. Also it requires the maximum length of the string as an argument.
* ``DateTimeField`` : A date and time, represented in Python.
* ``IntegerField`` : An integer. Values from -2147483648 to 2147483647 are safe in all databases supported by Django.
* ``DecimalField`` : A fixed-precision decimal number, represented in Python by a Decimal instance. Has two required arguments

 **DecimalField.max_digits** : The maximum number of digits allowed in the number. Note that this number must be greater than or equal to decimal_places.

 **DecimalField.decimal_places** : The number of decimal places to store with the number.

* ``EmailField`` : A CharField that checks that the value is a valid email address. It uses EmailValidator to validate the input.
* ``ImageField`` : Inherits all attributes and methods from FileField, but also validates that the uploaded object is a valid image.
* ``TextField`` : A large text field.

For more field types check the official documentation `here <https://docs.djangoproject.com/en/2.0/ref/models/fields/#django.db.models.DateField/>`_.

Indexes
-------

* ``PrimaryKey`` : In django an id field is added automatically acting as a primary key. Of course his behavior can be overridden.
* ``ForeignKey`` : To define a many-to-one relationship, use **django.db.models.ForeignKey**. You use it just like any other Field type: by including it as a class attribute of your model.

Building our own models
-----------------------

.. image:: database.png

The models.py file must look like this : ::

 from django.db import models

 # Create your models here.
 class User(models.Model):
 	username = models.CharField(max_length=45)
 	password = models.CharField(max_length=45)
 	email = models.EmailField()
	balance = models.DecimalField(max_digits=6, decimal_places=2)
	firstname = models.CharField(max_length=56)
	lastname = models.CharField(max_length=45)
	cellphone = models.CharField(max_length=14)
	address = models.CharField(max_length=255)
	town = models.CharField(max_length=45)
	post_code = models.CharField(max_length=45)
	country = models.CharField(max_length=45)

 class Product(models.Model):
	title = models.CharField(max_length=255)
	image = models.ImageField()
	description = models.CharField(max_length = 500)
	quantity = models.IntegerField()
	date_posted = models.DateTimeField(auto_now_add=True, blank=True)

 class Auction(models.Model):
	product_id = models.ForeignKey(Product, on_delete=models.CASCADE)
	number_of_bids = models.IntegerField()
	time_starting = models.DateTimeField()
	time_ending = models.DateTimeField()

 class Wishlist(models.Model):
	user_id = models.ForeignKey(User, on_delete=models.CASCADE)
	auction_id = models.ForeignKey(Auction, on_delete=models.CASCADE)

 class Bid(models.Model):
	user_id = models.ForeignKey(User, on_delete=models.CASCADE)
	auction_id = models.ForeignKey(Auction, on_delete=models.CASCADE)
	bid_time = models.DateTimeField()

 class Chat(models.Model):
	auction_id = models.ForeignKey(Auction, on_delete=models.CASCADE)
	user_id = models.ForeignKey(User, on_delete=models.CASCADE)
	message = models.TextField()
	time_sent = models.DateTimeField()


Shell
-----